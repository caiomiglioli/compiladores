def p_declaracao_variaveis_error(p): # erro aprovado 'inteiro: , ,'
def p_lista_variaveis_error(p): # erro aprovado 'inteiro: a, 1, b'
def p_var_error(p): # erro aprovado 'inteiro: '
def p_indice_error(p): # erro aprovado 'inteiro: a[]'
def p_declaracao_funcao_error(p):  # erro aprovado 'inteiro 9func(inteiro:n)'
def p_cabecalho_error(p): # erro aprovado 'inteiro (inteiro: n)'
def p_lista_parametros_error(p): # erro aprovado 'inteiro func(inteiro: n, )'
def p_parametro_error(p): # erro aprovado 'inteiro func(n)'
def p_se_error(p): # erro aprovado 'se a > 1 ent'
def p_repita_error(p): # erro aprovado 'repit x:=x+1 até x=10'
def p_atribuicao_error(p): # erro aprovado 'b :='
def p_leia_error(p): # erro aprovado 'leia()'
def p_escreva_error(p): # erro aprovado 'escreva()'
def p_retorna_error(p): # erro aprovado 'retorna()'
def p_expressao_logica_error(p): # erro aprovado 'se a = 5 || então'
def p_expressao_simples_error(p): # erro aprovado 'se x >  então'
def p_expressao_aditiva_error(p): # erro aprovado 'x = 5 +'
def p_expressao_multiplicativa_error(p): # erro aprovado 'x = 5 *'
def p_expressao_unaria_error(p): # erro aprovado x := 5 + (-)
def p_fator_error(p): # erro aprovado 'x := 5 + ()'
def p_chamada_funcao_error(p): # erro aprovado 'func(inteiro)'
def p_lista_argumentos_error(p): # erro aprovado 'func(m, inteiro)'
def p_lista_declaracoes_error(p): # erro aprovado 'x > 5 {no escopo global}'

# def p_corpo_acao(p): #reprovado # erro aprovado 'inteiro'

